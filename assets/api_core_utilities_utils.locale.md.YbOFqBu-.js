import{_ as e,c as l,o as a,V as o}from"./chunks/framework.MC2QjGNi.js";const p=JSON.parse('{"title":"Locale","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/utilities/utils.locale.md","filePath":"api/core/utilities/utils.locale.md"}'),t={name:"api/core/utilities/utils.locale.md"},r=o('<h1 id="locale" tabindex="-1">Locale <a class="header-anchor" href="#locale" aria-label="Permalink to &quot;Locale&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The <code>utils.locale.js</code> module provide functions to retrieve locale application settings.</p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="getbrowserlocale" tabindex="-1"><code>getBrowserLocale()</code> <a class="header-anchor" href="#getbrowserlocale" aria-label="Permalink to &quot;`getBrowserLocale()`&quot;">​</a></h3><p>Returns the user&#39;s browser locale using several possible sources.</p><ul><li><strong>Returns:</strong><ul><li><em>(string)</em> — A locale string in the <code>language-region</code> format (e.g., <code>en-US</code>, <code>fr-FR</code>).</li></ul></li></ul><h3 id="getlocale-languageonly-true" tabindex="-1"><code>getLocale(languageOnly = true)</code> <a class="header-anchor" href="#getlocale-languageonly-true" aria-label="Permalink to &quot;`getLocale(languageOnly = true)`&quot;">​</a></h3><p>Retrieves the application&#39;s default locale from configuration, falling back to the browser locale if not specified.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>languageOnly</code> <em>(<code>boolean</code>, default: <code>true</code>)</em>: If <code>true</code>, returns only the language part of the locale (e.g., <code>en</code> from <code>en-GB</code>).</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><em>(string)</em> — The configured or detected locale string, either full (<code>en-GB</code>) or just the language (<code>en</code>).</li></ul></li></ul><h3 id="getfallbacklocale-languageonly-true" tabindex="-1"><code>getFallbackLocale(languageOnly = true)</code> <a class="header-anchor" href="#getfallbacklocale-languageonly-true" aria-label="Permalink to &quot;`getFallbackLocale(languageOnly = true)`&quot;">​</a></h3><p>Retrieves the fallback locale defined in the configuration, with an option to extract just the language portion.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>languageOnly</code> <em>(<code>boolean</code>, default: <code>true</code>)</em>: If <code>true</code>, returns only the language part of the fallback locale.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><em>(string)</em> — The fallback locale, either full (<code>en-GB</code>) or just the language (<code>en</code>).</li></ul></li></ul>',13),c=[r];function n(i,u,s,d,g,h){return a(),l("div",null,c)}const m=e(t,[["render",n]]);export{p as __pageData,m as default};
