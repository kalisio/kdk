import{_ as s,c as e,o as i,V as a}from"./chunks/framework.MC2QjGNi.js";const g=JSON.parse('{"title":"v2.5 - Not yet released","description":"","frontmatter":{},"headers":[],"relativePath":"guides/migration/v2.5.md","filePath":"guides/migration/v2.5.md"}'),t={name:"guides/migration/v2.5.md"},n=a(`<h1 id="v2-5-not-yet-released" tabindex="-1">v2.5 - Not yet released <a class="header-anchor" href="#v2-5-not-yet-released" aria-label="Permalink to &quot;v2.5 - Not yet released&quot;">‚Äã</a></h1><p>More details can be found in the related <a href="https://github.com/kalisio/kdk/milestone/13" target="_blank" rel="noreferrer">milestone</a> on GitHub.</p><h2 id="major-breaking-changes" tabindex="-1">Major breaking changes <a class="header-anchor" href="#major-breaking-changes" aria-label="Permalink to &quot;Major breaking changes&quot;">‚Äã</a></h2><p>üí• Exposed properties changed in composable <code>activity.js</code>. <code>state</code>, <code>options</code> and <code>name</code> properties are now exposed using a more global object <code>CurrentActivityContext</code> which is reactive (see <a href="https://github.com/kalisio/kdk/issues/1055" target="_blank" rel="noreferrer">https://github.com/kalisio/kdk/issues/1055</a>).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To retrieve the <code>state</code> of the <code>CurrentActivity</code> you can now proceed that way:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CurrentActivityContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useCurrentActivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CurrentActivityContext</span></span></code></pre></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>When using the composable <code>activity.js</code> from an another composable be aware that the <code>CurrentActivity</code> is not set and the <code>CurrentActivityContext</code> exposed properties are <code>null</code>. You should watch the <code>CurrentActivity</code> value to use the <code>CurrentActivityContext</code>object.</p></div><p>üí• Renamed composable file <code>counter.js</code> to <code>collection-counter.js</code>. Therefore, the <code>useCounter</code> function is renamed to <code>useCollectionCounter</code>.</p><h2 id="major-new-features" tabindex="-1">Major new features <a class="header-anchor" href="#major-new-features" aria-label="Permalink to &quot;Major new features&quot;">‚Äã</a></h2><p>üëâ New <code>KRequestProgressBar</code> component to be used in your <code>App.vue</code> or equivalent in order to display a progress bar whenever a request to the server is processing.</p><p>üëâ New <code>useErrors()</code> composable to be used in your <code>App.vue</code> or equivalent in order to display a notification whenever a request to the server raises an error.</p><p>üëâ Ability for JWT to target a user using others properties then the user ID, applications should allow this in their authentication configuration.</p><details class="details custom-block"><summary>‚¨áÔ∏è Example of an authentication configuration to allow JWT identifying a user by email</summary><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// default.js of your application, assuming your user objects have an email properties</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authentication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	identityFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Your JWT can now be issued <a href="https://kalisio.github.io/skeleton/guides/development/tips.html#personal-access-token" target="_blank" rel="noreferrer">as usual</a> but using a payload like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;aud&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kalisio.xyz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kalisio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1552402010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;sub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_email@gmail.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details>`,12),o=[n];function l(r,h,p,c,d,k){return i(),e("div",null,o)}const E=s(t,[["render",l]]);export{g as __pageData,E as default};
