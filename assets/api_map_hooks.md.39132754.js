import{_ as e,o,c as t,Q as a}from"./chunks/framework.70a39c86.js";const f=JSON.parse('{"title":"Hooks","description":"","frontmatter":{},"headers":[],"relativePath":"api/map/hooks.md","filePath":"api/map/hooks.md"}'),r={name:"api/map/hooks.md"},s=a('<h1 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;Hooks&quot;">​</a></h1><h2 id="query" tabindex="-1">Query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;Query&quot;">​</a></h2><h3 id="asgeojson-options" tabindex="-1">asGeoJson(options) <a class="header-anchor" href="#asgeojson-options" aria-label="Permalink to &quot;asGeoJson(options)&quot;">​</a></h3><blockquote><p>Return a hook function according to provided options</p></blockquote><p>Transform the hook results into a <a href="https://tools.ietf.org/html/rfc7946" target="_blank" rel="noreferrer">GeoJson</a> object:</p><ul><li><strong>force</strong>: set to <code>true</code> to perform transformation whatever hook parameters, otherwise this hook will only be run when <code>hook.params.asGeoJson</code> is <code>true</code> (default)</li><li><strong>longitudeProperty</strong>: name of the field where to read the longitude on result items</li><li><strong>latitudeProperty</strong>: name of the field where to read the latitude on result items</li><li><strong>altitudeProperty</strong>: name of the field where to read the altitude on result items</li><li><strong>pick</strong>: an array of properties to be picked on result items using <a href="https://lodash.com/docs#pick" target="_blank" rel="noreferrer">Lodash</a></li><li><strong>omit</strong>: an array of properties to be omitted on result items using <a href="https://lodash.com/docs#omit" target="_blank" rel="noreferrer">Lodash</a></li><li><strong>properties</strong>: a map between input key path and output key path supporting dot notation, a value of the map is a structure like this: <ul><li><strong>from</strong>: input key path</li><li><strong>to</strong>: output key path (defaults to input path if not given)</li><li><strong>delete</strong>: boolean indicating if the input key path should be deleted or not after mapping</li></ul></li><li><strong>asFeatureCollection</strong>: true to output a <a href="https://tools.ietf.org/html/rfc7946#page-12" target="_blank" rel="noreferrer">GeoJson feature collection</a> (default) otherwise will generate an array of <a href="https://tools.ietf.org/html/rfc7946#page-11" target="_blank" rel="noreferrer">GeoJson features</a></li></ul><h3 id="marshallspatialquery-hook" tabindex="-1">marshallSpatialQuery(hook) <a class="header-anchor" href="#marshallspatialquery-hook" aria-label="Permalink to &quot;marshallSpatialQuery(hook)&quot;">​</a></h3><p>Converts from client/server side spatial types (e.g. coordinates or numbers) to basic JS types, which is usually required when querying the database. Applies to <a href="https://docs.mongodb.com/manual/reference/operator/query-geospatial/" target="_blank" rel="noreferrer">MongoDB geospatial operators</a>. It also manages <a href="./services.html#./services.md#advanced-feature-filtering">shortcuts to create spatial queries</a> for features in a given area.</p><p>Also set <code>hook.params.asGeoJson</code> to <code>true</code> when <code>hook.query.geoJson</code> is <code>true</code> (see above).</p><h3 id="aggregatefeaturesquery-hook" tabindex="-1">aggregateFeaturesQuery(hook) <a class="header-anchor" href="#aggregatefeaturesquery-hook" aria-label="Permalink to &quot;aggregateFeaturesQuery(hook)&quot;">​</a></h3><p>Constructs query for feature <a href="./services.html#time-based-feature-aggregation">aggregation over time</a>.</p><blockquote><p>Reads the query object to process from <code>hook.params.query.$aggregate</code></p></blockquote>',12),i=[s];function n(l,h,u,p,d,c){return o(),t("div",null,i)}const m=e(r,[["render",n]]);export{f as __pageData,m as default};
