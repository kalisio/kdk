import{_ as t,c as e,o as s,V as o}from"./chunks/framework.MC2QjGNi.js";const a="/kdk/assets/kcard.R8a0iXks.png",n="/kdk/assets/kcard-header-footer.pq-zMs7D.png",r="/kdk/assets/kcard-heading.ngVoLbP7.png",i="/kdk/assets/kcard-expanded.528hFGHD.png",d="/kdk/assets/kcardsection.izxUarjn.png",C=JSON.parse('{"title":"Items","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/components/items.md","filePath":"api/core/components/items.md"}'),l={name:"api/core/components/items.md"},p=o('<h1 id="items" tabindex="-1">Items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;Items&quot;">​</a></h1><p><strong>Items</strong> are specialized components used to render elements within a <a href="./collections.html">Collection</a>.</p><p>The <strong>KDK</strong> provides a set of pre-built <strong>Items</strong> components that can be used directly or serve as a foundation for developing your own custom items.</p><h2 id="pre-built-items" tabindex="-1">Pre-built Items <a class="header-anchor" href="#pre-built-items" aria-label="Permalink to &quot;Pre-built Items&quot;">​</a></h2><h3 id="kitem" tabindex="-1">KItem <a class="header-anchor" href="#kitem" aria-label="Permalink to &quot;KItem&quot;">​</a></h3><p><em>TODO</em></p><h3 id="kcard" tabindex="-1">KCard <a class="header-anchor" href="#kcard" aria-label="Permalink to &quot;KCard&quot;">​</a></h3><p>A <strong>KCard</strong> display the item information using a <strong>card</strong>. The <strong>KCard</strong> is divided into multiple parts:</p><p><img src="'+a+'" alt="KCard"></p><ul><li><p>both <strong>Header</strong> and <strong>Footer</strong> parts are implemented using a <strong>KPanel</strong>. That means you car provide any <strong>Content</strong> you want.</p><p><img src="'+n+'" alt="KCard Header/Footer"></p></li><li><p>the <strong>Heading</strong> part displays data into two areas:</p><p><img src="'+r+'" alt="KCard Heading"></p><ul><li>a <strong>Title</strong> extracted from a <code>name</code> property</li><li>an <strong>Avatar</strong> using the initials of the title</li></ul></li><li><p>the <strong>Sections</strong> part is implemented using 2 <strong>KPanel</strong>. One panel to display the <em>visible</em> sections, and a second panel to display <em>expandable</em> sections. Depending on whether you provide <em>expandable</em> sections or not, an <strong>expand</strong> button is displayed to expand or to reduce the card.</p><p><img src="'+i+'" alt="Expanded KCard"></p></li></ul><p>A section is typically implemented using the <strong>KCardSection</strong> component as its base. A <strong>KCardSection</strong> follows the schema below:</p><p><img src="'+d+'" alt="KCardSection"></p><ul><li>the <strong>Title</strong> of the section</li><li>the <strong>Actions</strong> assigned to the section and implemented using a <strong>KPanel</strong></li><li>the <strong>Custom</strong> part you need to implement.</li></ul><h2 id="custom-items" tabindex="-1">Custom Items <a class="header-anchor" href="#custom-items" aria-label="Permalink to &quot;Custom Items&quot;">​</a></h2><p><em>TODO</em></p>',15),m=[p];function c(g,h,u,_,k,b){return s(),e("div",null,m)}const K=t(l,[["render",c]]);export{C as __pageData,K as default};
