(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{577:function(t,e,a){"use strict";a.r(e);var s=a(13),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"command-line-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-line-tools"}},[t._v("#")]),t._v(" Command-line tools")]),t._v(" "),a("h2",{attrs:{id:"kdk-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kdk-cli"}},[t._v("#")]),t._v(" KDK CLI")]),t._v(" "),a("p",[t._v("The KDK CLI (a.k.a. "),a("code",[t._v("kli")]),t._v(") is a multiplexer for usual git/yarn commands used when developing KDK-based applications. It allows to easily clone, install, link, unlink, switch branch on all modules and application using a single command.")]),t._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Production version:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g @kalisio/kli\n")])])]),a("p",[t._v("Or to use the master branch locally:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/kalisio/kli.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" kli\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n")])])]),a("h3",{attrs:{id:"workspaces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workspaces"}},[t._v("#")]),t._v(" Workspaces")]),t._v(" "),a("p",[t._v("The CLI relies on a workspace file defining the dependency tree between your KDK-based application and modules like this:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("kdk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("kApp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("application")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@kalisio/kdk'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("Each key is a git repository, i.e. a module, monorepo or application, with the following available properties:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("dependencies")]),t._v(": list of dependent (KDK-)based modules if any")]),t._v(" "),a("li",[a("code",[t._v("branch")]),t._v(": branch the module should be forced on whatever the target branch of the CLI")]),t._v(" "),a("li",[a("code",[t._v("branches")]),t._v(": list of branches the module is available on (if the target branch of the CLI is not included it will be skipped)")]),t._v(" "),a("li",[a("code",[t._v("application")]),t._v(": indicates if this is the main KDK-based application module, i.e. it has an "),a("code",[t._v("api")]),t._v(" subfolder")]),t._v(" "),a("li",[a("code",[t._v("path")]),t._v(": relative path to the repository on the local disk")]),t._v(" "),a("li",[a("code",[t._v("organization")]),t._v(": GitHub/GitLab organization the repository belongs to")]),t._v(" "),a("li",[a("code",[t._v("output")]),t._v(": the name of the repository folder on the local disk")]),t._v(" "),a("li",[a("code",[t._v("url")]),t._v(": the root URL to the remote git repositories (if not given will be https://github.com)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("branch")]),t._v(" option can also target a git tag, typically fo production releases.")])]),t._v(" "),a("h3",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("All operations will take effect in the current working directory so that subdirectories named according to modules will be created or expected to already exist.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// Will clone all repositories\nkli workspace.js --clone\n// Will "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" dependencies "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" all modules and application\nkli workspace.js --install\n// Will perform "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" between required modules and application\nkli workspace.js --link\n// Will perform unlink between required modules and application\nkli workspace.js --unlink\n// Will perform branch switching on all modules and application having the given target branch\nkli workspace.js --branch "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n// Will perform branch switching on all modules and application using the specified branch "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" workspace\nkli workspace.js --switch\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("This CLI assumes git and yarn are already globally installed on your system.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("By default all Git operations target the "),a("code",[t._v("kalisio")]),t._v(" organization, you can change this for the whole workspace using the "),a("code",[t._v("organization")]),t._v(" CLI option or on specific modules only using the "),a("code",[t._v("organization")]),t._v(" option in the workspace file. Like this you include modules coming from a separate organization but used as dependencies of the project owned by the main organization of the project.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("All operations are performed relative to the CWD by default, you can change this for specific modules only using the "),a("code",[t._v("path")]),t._v(" option in the workspace file providing a module path relative to the CWD. Like this you can for instance have modules coming from a separate organization isolated into their own directory.")])]),t._v(" "),a("p",[t._v("Sample workspaces for our "),a("a",{attrs:{href:"https://github.com/kalisio/kApp",target:"_blank",rel:"noopener noreferrer"}},[t._v("application template"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/kalisio/kano",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kano"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/kalisio/aktnmap",target:"_blank",rel:"noopener noreferrer"}},[t._v("Akt'n'map"),a("OutboundLink")],1),t._v(" are provided in the "),a("a",{attrs:{href:"https://github.com/kalisio/kli",target:"_blank",rel:"noopener noreferrer"}},[t._v("kli repository"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Full CLI usage is the following:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Usage: index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("workspacefile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nOptions:\n  -V, --version                      output the version number\n  -o, --organization "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("organization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  GitHub organization or GitLab group owing the project "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kalisio"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -u, --url "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                    Git server base URL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -d, --debug                        Verbose output "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" debugging\n  -c, --clone "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("               Clone "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" repositories "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("with optional target branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all modules\n  -p, --pull                         Pull "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" repositories "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all modules\n  -i, --install                      Perform "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all modules\n  -l, --link                         Perform "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all modules\n  -ul, --unlink                      Perform "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" unlink "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all modules\n  -b, --branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              Switch to target "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" all modules where it does exist\n  -s, --switch                       Switch all modules to the default "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch specified "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" workspace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("if any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -m, --modules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            Comma separated list of modules from the workspace to apply "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" on\n  -h, --help                         output usage information\n")])])]),a("h3",{attrs:{id:"working-on-multiple-versions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#working-on-multiple-versions"}},[t._v("#")]),t._v(" Working on multiple versions")]),t._v(" "),a("p",[t._v("In order to be able to switch easily between different versions of NodeJS you usually use a version manager like "),a("a",{attrs:{href:"https://github.com/tj/n",target:"_blank",rel:"noopener noreferrer"}},[t._v("n"),a("OutboundLink")],1),t._v("/"),a("a",{attrs:{href:"https://github.com/creationix/nvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm"),a("OutboundLink")],1),t._v(" under Linux/Mac or "),a("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm"),a("OutboundLink")],1),t._v(" under Windows. However, as links are global to a Yarn installation it can be tricky to switch between different versions of the same repository using different NodeJS versions, e.g. KDK on master branch running under NodeJS v12 and KDK on another branch running under NodeJS v16.")]),t._v(" "),a("p",[t._v("Although you can have a single local KDK repository and switch between the branches we do not recommand it. Indeed, each time you will switch you will also have to reinstall all the dependencies for the new NodeJS version, which can be cumbersome and has proven to be error-prone for package managers. Moreover, the branch names between the different repositories in a complex architecture might not be consistent. Last but not least, sometimes the repositories themselves might change their names or location between different versions.")]),t._v(" "),a("p",[t._v("In a nutshell, we recommand creating a different workspace for your application and clone each repository in a different folder for each version. This way it is far more easier to switch from one version to another, before switching to a new version you simply need to unlink the previous version workspace:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// We are currently using NodeJS v12\ncd nodejs12\nkli workspace-nodejs12.js --link\n...\n// Start working with NodeJS v16\nkli workspace-nodejs12.js --unlink\nnvm use 16.0.0\ncd nodejs16\nkli workspace-nodejs16.js --link\n")])])]),a("h2",{attrs:{id:"gitrob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitrob"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/michenriksen/gitrob",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitrob"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Gitrob is a tool to help find potentially sensitive files pushed to public repositories on Github. Simply run it using a GitHub token and a target user or organisation: "),a("code",[t._v("gitrob -github-access-token XXX kalisio")]),t._v(".")]),t._v(" "),a("p",[t._v("Then you can open the WebUI at "),a("a",{attrs:{href:"http://localhost:9393",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9393"),a("OutboundLink")],1),t._v(" and see what's going on.")]),t._v(" "),a("h2",{attrs:{id:"nohup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nohup"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Nohup",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nohup"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("We use it to launch processes in the background on servers, which won't be killed when closing the ssh session.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://doc.ubuntu-fr.org/screen",target:"_blank",rel:"noopener noreferrer"}},[t._v("Screen"),a("OutboundLink")],1),t._v(" can also do the job")]),t._v(" "),a("h2",{attrs:{id:"tail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.linode.com/docs/tools-reference/tools/view-and-follow-the-end-of-text-files-with-tail",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tail"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("To track logs currently written, Docker has an "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/logs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("equivalent command"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"conemu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conemu"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/Maximus5/ConEmu",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConEmu"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Customizable Windows terminal.")]),t._v(" "),a("p",[t._v("To add new tasks "),a("em",[t._v("right click on settings > Startup/Tasks")]),t._v(", and add commands like this to open a new PowerShell at a given location:\n"),a("code",[t._v('powershell.exe -new_console:t:"TaskName":d:D:\\path-to-directory')]),t._v(".")]),t._v(" "),a("p",[t._v("If you'd like the PowerShell to execute a script at launch time (e.g. to setup your environment variables): "),a("code",[t._v('powershell.exe -noexit path-to-script new_console:t:"TaskName":d:D:\\path-to-directory')])]),t._v(" "),a("p",[t._v("To make a command executed by default "),a("em",[t._v("right click on settings > Startup > Select it as named task")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("It might be required to modify the "),a("a",{attrs:{href:"https://technet.microsoft.com/fr-FR/library/hh847748.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("execution policy"),a("OutboundLink")],1),t._v(", e.g. "),a("code",[t._v("Set-ExecutionPolicy -ExecutionPolicy RemoteSigned")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"travis-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#travis-cli"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/travis-ci/travis.rb#installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CLI"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("To encrypt a file in reliable manner use a Linux VM or container because this does not work under Windows. For example with https://hub.docker.com/r/caktux/travis-cli/:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull caktux/travis-cli\n// Mount your project as volume\n// Override the default entry point "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" automatically launch the travis CLI with provided arguments\n// otherwise you cannot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" multiple commands\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -it --name travis -v d:/Development/kalisio/kaabah:/project --entrypoint"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" --rm caktux/travis-cli "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n$ travis login\n$ travis encrypt-file ssh.pem\n")])])]),a("p",[t._v("Add the output to your build script:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("before_install:\n  - openssl aes-256-cbc -K "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$encrypted_12c8071d2874_key")]),t._v(" -iv "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$encrypted_12c8071d2874_iv")]),t._v(" -in ssh.pem.enc -out ssh.pem -d\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);