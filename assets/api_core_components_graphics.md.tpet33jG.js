import{_ as e,c as t,J as o,V as i,E as s,o as n}from"./chunks/framework.MC2QjGNi.js";const _=JSON.parse('{"title":"Graphics","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/components/graphics.md","filePath":"api/core/components/graphics.md"}'),r={name:"api/core/components/graphics.md"},c=i('<h1 id="graphics" tabindex="-1">Graphics <a class="header-anchor" href="#graphics" aria-label="Permalink to &quot;Graphics&quot;">​</a></h1><p>The <code>graphics</code> folder provides various components that allow users to display various graphical components.</p><h2 id="kicon" tabindex="-1"><code>KIcon</code> <a class="header-anchor" href="#kicon" aria-label="Permalink to &quot;`KIcon`&quot;">​</a></h2><p>The <code>KIcon</code> component is a wrapper around <a href="https://quasar.dev/vue-components/icon/" target="_blank" rel="noreferrer">Quasar Icon</a> that enables displaying a primary icon with an optional stacked overlay icon. This is useful for creating composite or symbolic icons by layering one icon on top of another.</p><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>icon</code></td><td><code>String | Object</code></td><td><code>undefined</code></td><td>Main icon name (as string) or an object describing the main icon and its overlay.</td></tr></tbody></table><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><ul><li>An icon using a name:</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">KIcon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;las la-home&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><ul><li>And the same icon with a red slash through it:</li></ul><p>``html</p>',11);function h(l,p,d,m,u,g){const a=s("KIcon");return n(),t("div",null,[c,o(a,{icon:{name:"las la-home",overlay:{name:"las la-slash",color:"red",rotation:90}}})])}const b=e(r,[["render",h]]);export{_ as __pageData,b as default};
