import{_ as s,c as a,o as i,V as n}from"./chunks/framework.MC2QjGNi.js";const u=JSON.parse('{"title":"Graphics","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/components/graphics.md","filePath":"api/core/components/graphics.md"}'),t={name:"api/core/components/graphics.md"},e=n(`<h1 id="graphics" tabindex="-1">Graphics <a class="header-anchor" href="#graphics" aria-label="Permalink to &quot;Graphics&quot;">​</a></h1><p>The <code>graphics</code> folder contains reusable components for rendering a variety of graphical elements.</p><h2 id="kicon" tabindex="-1"><code>KIcon</code> <a class="header-anchor" href="#kicon" aria-label="Permalink to &quot;\`KIcon\`&quot;">​</a></h2><p>The <code>KIcon</code> component is a wrapper around <a href="https://quasar.dev/vue-components/icon/" target="_blank" rel="noreferrer">Quasar Icon</a> that enables displaying a primary icon with an optional stacked overlay icon. This is useful for creating composite or symbolic icons by layering one icon on top of another. Moreover, and unlike <strong>Quasar</strong>&#39;s built-in <strong>QIcon</strong>, <code>KIcon</code> supports any valid HTML color definition.</p><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>icon</code></td><td><code>String | Object</code></td><td><code>undefined</code></td><td>Main icon name (as string) or an object describing the main icon and its overlay.</td></tr></tbody></table><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><ul><li>An icon using a name:</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">KIcon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;las la-home&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><ul><li>And the same icon with a red slash through it:</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">KIcon</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    name: &#39;las la-home&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    overlay: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      name: &#39;las la-slash&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      color: &#39;red&#39;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      rotation: 90</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div>`,11),o=[e];function l(h,r,p,c,d,k){return i(),a("div",null,o)}const y=s(t,[["render",l]]);export{u as __pageData,y as default};
