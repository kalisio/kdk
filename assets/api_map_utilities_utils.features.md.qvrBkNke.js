import{_ as s,c as e,o as i,V as a}from"./chunks/framework.MC2QjGNi.js";const u=JSON.parse('{"title":"Features utilities","description":"","frontmatter":{},"headers":[],"relativePath":"api/map/utilities/utils.features.md","filePath":"api/map/utilities/utils.features.md"}'),t={name:"api/map/utilities/utils.features.md"},n=a('<h1 id="features-utilities" tabindex="-1">Features utilities <a class="header-anchor" href="#features-utilities" aria-label="Permalink to &quot;Features utilities&quot;">​</a></h1><p>This module provides helper functions to manage recurring tasks on features, like binding and unbinding event listeners to track real-time events on features services and update layers accordingly.</p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="listentofeaturesserviceeventsforlayer-layer-options-listeners" tabindex="-1"><code>listenToFeaturesServiceEventsForLayer(layer, options, listeners)</code> <a class="header-anchor" href="#listentofeaturesserviceeventsforlayer-layer-options-listeners" aria-label="Permalink to &quot;`listenToFeaturesServiceEventsForLayer(layer, options, listeners)`&quot;">​</a></h3><p>Binds event listeners to a given layer&#39;s service events and stores them in the returned object.</p><blockquote><p>Rely on <a href="./../../core/utilities/utils.services.html">listenToServiceEvents</a></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>layer</code> (Object) - The layer to listen for service events.</li><li><code>options</code> (Object) - Event handlers to be executed when an event occurs. This object may contain: <ul><li><code>context</code> (String | Object | null) - Service context if any.</li><li><code>created</code> (Function | null) - Handler for feature creation events.</li><li><code>updated</code> (Function | null) - Handler for feature update events.</li><li><code>patched</code> (Function | null) - Handler for feature patch events.</li><li><code>removed</code> (Function | null) - Handler for feature removal events.</li><li><code>all</code> (Function | null) - Handler for all events if no specific defined.</li></ul></li><li><code>listeners</code> (Object) - Object to store the registered event listeners.</li></ul><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><ul><li><code>listeners</code> (Object) - The registered event listeners.</li></ul><h4 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> layer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { service: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;features&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, _id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;layer-1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> listeners</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> registeredListeners</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listenToFeaturesServiceEventsForLayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer, {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">feature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Feature created in layer ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, feature),</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  updated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">feature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Feature updated in layer ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, feature),</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  removed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">feature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Feature removed in layer ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, feature),</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, listeners);</span></span></code></pre></div><hr><h3 id="unlistentofeaturesserviceeventsforlayer-layer-listeners" tabindex="-1"><code>unlistenToFeaturesServiceEventsForLayer(layer, listeners)</code> <a class="header-anchor" href="#unlistentofeaturesserviceeventsforlayer-layer-listeners" aria-label="Permalink to &quot;`unlistenToFeaturesServiceEventsForLayer(layer, listeners)`&quot;">​</a></h3><p>Unbinds previously registered event listeners from a given layer&#39;s service events.</p><blockquote><p>Rely on <a href="./../../core/utilities/utils.services.html">unlistenToServiceEvents</a></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>layer</code> (Object) - The layer to remove service event listeners from.</li><li><code>listeners</code> (Object) - The object containing registered event listeners.</li></ul><h4 id="example-usage-1" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage-1" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unlistenToFeaturesServiceEventsForLayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer, registeredListeners);</span></span></code></pre></div>',20),l=[n];function r(h,p,k,o,d,c){return i(),e("div",null,l)}const y=s(t,[["render",r]]);export{u as __pageData,y as default};
